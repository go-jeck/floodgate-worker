// Code generated by MockGen. DO NOT EDIT.
// Source: analytic/analytic_config.go

// Package mock_analytic is a generated GoMock package.
package mock_analytic

import (
	sarama "github.com/Shopify/sarama"
	sarama_cluster "github.com/bsm/sarama-cluster"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAnalyticConfig is a mock of AnalyticConfig interface
type MockAnalyticConfig struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyticConfigMockRecorder
}

// MockAnalyticConfigMockRecorder is the mock recorder for MockAnalyticConfig
type MockAnalyticConfigMockRecorder struct {
	mock *MockAnalyticConfig
}

// NewMockAnalyticConfig creates a new mock instance
func NewMockAnalyticConfig(ctrl *gomock.Controller) *MockAnalyticConfig {
	mock := &MockAnalyticConfig{ctrl: ctrl}
	mock.recorder = &MockAnalyticConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnalyticConfig) EXPECT() *MockAnalyticConfigMockRecorder {
	return m.recorder
}

// SetUpConfig mocks base method
func (m *MockAnalyticConfig) SetUpConfig() *sarama_cluster.Config {
	ret := m.ctrl.Call(m, "SetUpConfig")
	ret0, _ := ret[0].(*sarama_cluster.Config)
	return ret0
}

// SetUpConfig indicates an expected call of SetUpConfig
func (mr *MockAnalyticConfigMockRecorder) SetUpConfig() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUpConfig", reflect.TypeOf((*MockAnalyticConfig)(nil).SetUpConfig))
}

// SetUpClient mocks base method
func (m *MockAnalyticConfig) SetUpClient(brokers []string, config *sarama.Config) (*sarama.Client, error) {
	ret := m.ctrl.Call(m, "SetUpClient", brokers, config)
	ret0, _ := ret[0].(*sarama.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetUpClient indicates an expected call of SetUpClient
func (mr *MockAnalyticConfigMockRecorder) SetUpClient(brokers, config interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUpClient", reflect.TypeOf((*MockAnalyticConfig)(nil).SetUpClient), brokers, config)
}
